##  Copyright 2007-2025 Carnegie Mellon University
##  See license information in LICENSE.txt.

##  Portions are Crown Copyright 2020.  See details near end of file

##########################################################################
##  yafApplabelRules.conf
##  Basic application labeling rules for YAF
##  -----------------------------------------------------------------------
##  Authors: Emily Ecoff
##           Chris Inacio
##           Brian Trammell
##########################################################################
##  @DISTRIBUTION_STATEMENT_BEGIN@
##  YAF 2.16
##
##  Copyright 2024 Carnegie Mellon University.
##
##  NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
##  INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
##  UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
##  AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR
##  PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF
##  THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF
##  ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT
##  INFRINGEMENT.
##
##  Licensed under a GNU GPL 2.0-style license, please see LICENSE.txt or
##  contact permission@sei.cmu.edu for full terms.
##
##  [DISTRIBUTION STATEMENT A] This material has been approved for public
##  release and unlimited distribution.  Please see Copyright notice for
##  non-US Government use and distribution.
##
##  This Software includes and/or makes use of Third-Party Software each
##  subject to its own license.
##
##  DM24-1063
##  @DISTRIBUTION_STATEMENT_END@
##########################################################################

# Format of this File
#
# This file is a list of label statements. A label statement begins with
# the keyword 'label', and has the following form:
#
#           label <N> <label-rule>
#
# where <N> is the application label to apply (an unsigned 16-bit decimal
# integer in the range 0 to 65535), and <label-rule> specifies how to
# recognize the given application protocol. Three types of label rules are
# supported: regex, plugin, and signature.
#
# Regular expression rules have the following form:
#
#           label <N> regex <expression>
#
# The regular expression is compared against the available payload of
# both directions of the flow, and is a PCRE regular expression (see
# PCRE documentation for details). The expression is undelimited, and
# continues until the end of the line. If the expression matches either
# direction of the payload, the label <N> is applied to the flow.
#
# Plugin rules are used to label application payload using a C
# dynamically loaded library, and have the following form:
#
#          label <N> plugin <library> <function> <arg-list>
#
# where <library> is the name of a dynamically loadable library that
# exists somewhere within the LD_LIBRARY_PATH, the LTDL_LIBRARY_PATH, or
# a system library path, without the library name extension (usually
# .so); <function> is the name of the function to call within that
# library; and the optional <arg-list> is a space-separated list of
# arguments that will be passed as the argc and argv parameters to that
# function. If the plugin returns 1, the flow will be labeled with <N>.
# Otherwise, the flow will be labeled with whatever value the plugin
# returns (useful for a plugin that can identify more than 1 protocol.
# See the source code to the plugins that ship with YAF for details.
#
#
# Regular expression rules that only search for a string have the form:
#
#	   label <N> signature <expression>
#
# The regular expression is compared against the available payload of
# the flow.  For expressions that you want to search for first before
# port-based matching, use this format.  The expression should be a
# PCRE regular expression.  The expression is undelimited, and continues
# until the end of the line.  If the expression matches, the label <N> is
# applied to the flow
#
# A '#' symbol starts a comment, and the rest of the line is a comment.
#
##########################################################################


# SSL/Proxied - choose proxy port!
#label 3133 plugin proxyplugin proxyplugin_LTX_ycProxyScanScan

# HTTP
label 80 regex HTTP/\d

# SSH
label 22 plugin sshplugin sshplugin_LTX_ycSshScanScan
# SMTP
label 25 plugin smtpplugin smtpplugin_LTX_ycSMTPScanScan

# DNS
label 53 plugin dnsplugin dnsplugin_LTX_ycDnsScanScan

# FTP
label 21 regex (?i)^\s*(ACCT|AUTH\s(SSL|TLS|GSSAPI)|ADAT\s|220[ -].*(FTP|FileZilla)|REST\s+\d|RETR\s+|CWD\s+|STOU|PASV|USER\s)

# SSL/TLS
label 443 plugin tlsplugin tlsplugin_LTX_ycTlsScanScan

# QUIC (IETF) - supports draft versions 23-32, version negotiation, and future
# RFC version
label 51443 regex ^[\xC0-\xCF](\xFF\x00{2}[\x17-\x20]|\x0A{4}|\x00{3}\x01)

# SLP
label 427 plugin slpplugin slpplugin_LTX_ycSlpScanScan

# SMB
label 139 regex ^.{0,5}\x00...(\xFF|\xFE)SMB

# IMAP
label 143 regex (?i)^\s*(.{1,7}\s(CAPABILITY|AUTHENTICATE|STARTTLS|LOGIN|FETCH)|\*\s.*IMAP)

# IRC - The label here reflects the de facto IRC port (which should help with
# identification) but the plugin labels the flow using the IANA-assigned IRC
# port of 194.
label 6667 plugin ircplugin ircplugin_LTX_ycIrcScanScan

# RTSP
label 554 regex RTSP/\d\.\d\b

# SIP
label 5060 regex SIP/\d\.\d\b

# RSYNC
label 873 regex ^@RSYNCD:

# RDP
label 3389 regex ^((\x01|\x02|\x03).{4}\xE0\x00{5}|\xFF{4}.{2}.{1}\x01)

# IKEv2 --- See license below
label 500 regex ^.{16}[\x21-\x36]\x20[\x22-\x29].{9}[\x22-\x29]

# PPTP
label 1723 plugin pptpplugin pptpplugin_LTX_ycPPTPScanScan

# NNTP
label 119 plugin nntpplugin nntpplugin_LTX_ycNNTPScanScan

# TFTP
label 69 plugin tftpplugin tftpplugin_LTX_ycTFTPScanScan

# Teredo
label 3544 plugin teredoplugin teredoplugin_LTX_ycTeredoScanScan

# MYSQL
label 3306 plugin mysqlplugin mysqlplugin_LTX_ycMYSQLScanScan

# POP3
label 110 plugin pop3plugin pop3plugin_LTX_ycPop3ScanScan

# SNMP
label 161 plugin snmpplugin snmpplugin_LTX_ycSnmpScanScan

# MQTT - supports v3.1 - 5.x
label 1883 regex ^\x10...\x4D\x51(\x49\x73\x64\x70\x03|\x54\x54[\x04-\x05])

# AIM -- Given declining prevalence, could be commented out or removed
label 5190 plugin aolplugin aolplugin_LTX_ycAolScanScan

# Gnutella p2p
label 6346 regex (?i)^(GNUTELLA CONNECT/|gnd[\x01\x02]?.?.?\x01)

# Yahoo Messenger -- Given declining prevalence, could be commented out or
# removed
label 5050 regex ^YMSG

# SOCKS
label 1080 plugin socksplugin socksplugin_LTX_ycSocksScanScan

# BGP
label 179 plugin bgpplugin bgpplugin_LTX_ycBgpScanScan

# DHCP
label 67 plugin dhcpplugin dhcpplugin_LTX_ycDhcpScanScan

# VNC RFB
label 5900 regex ^RFB

# RTP/RTCP
label 5004 plugin rtpplugin rtpplugin_LTX_ycRtpScanScan

# Jabber XMPP
label 5222 regex jabber:client

# MSNP
label 1863 regex ^VER \d MSNP\d\d

# MSOffice Update -- Given declining prevalence on unencrypted channels, could
# be commented out or removed
label 2223 regex ^MSOPID

# MGCP RFC 3435
label 2427 regex MGCP 1.0

# MEGACO, h.248
label 2944 regex ^MEGACO/1

# VMware Server Console
label 902 regex (?i)^220 VMware Authentication Daemon

# BitTorrent
label 6881 regex ^\x13BitTorrent protocol

# LDAP
label 389 plugin ldapplugin ldapplugin_LTX_ycLdapScanScan

# DNP 3.0
label 20000 plugin dnp3plugin dnp3plugin_LTX_ycDnpScanScan

# Modbus
label 502 plugin modbusplugin modbusplugin_LTX_ycModbusScanScan

# EthIP
label 44818 plugin ethipplugin ethipplugin_LTX_ycEthIPScanScan

# NetBIOS Datagram Service/SMB
label 138 plugin netdgmplugin netdgmplugin_LTX_ycNetDgmScanScan

# Gh0st
label 9997 plugin gh0stplugin gh0stplugin_LTX_ycGh0stScanScan

# PI http://badishi.com/initial-analysis-of-poison-ivy/
label 65534 plugin piplugin piplugin_LTX_ycPIScanScan

# LDP
label 646 plugin ldpplugin ldpplugin_LTX_ycLdpScanScan

# Palevo http://walisecurity.wordpress.com/
label 65533 plugin palplugin palplugin_LTX_ycPalScanScan

# NTP
label 123 plugin ntpplugin ntpplugin_LTX_ycNTP

# Sample Signature
#label 1000 signature <Find Me>



##########################################################################
#
# The regular expression above to capture IKEv2 traffic (label 500) was copied
# from https://github.com/ukncsc/zeek-plugin-ikev2/blob/master/scripts/dpd.sig
# and has the following license:
#
#
# Crown Copyright 2020, All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# (1) Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#
# (2) Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# (3) Neither the name of the University of California, Lawrence Berkeley
#     National Laboratory, U.S. Dept. of Energy, International Computer
#     Science Institute, nor the names of contributors may be used to endorse
#     or promote products derived from this software without specific prior
#     written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# Note that some files in the distribution may carry their own copyright
# notices.
#
##########################################################################
